version: '3'
services:
  nginx:
   container_name: nginx
   image: nginx:1.13
   restart: always
   ports:
   - 80:80
   - 443:443
   volumes:
   - ./nginx/:/etc/nginx/
   depends_on:
   - app

  nginx-prometheus-exporter:
    container_name: nginx-exporter
    image: nginx/nginx-prometheus-exporter
    depends_on:
      - nginx
    ports:
      - 9113:9113
    command:
      - '-nginx.scrape-uri=http://nginx:80/basic_status'



  mongodb:
    #restart: always
    container_name: some-mongo
    image: mongo:4.4
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
      - MONGO_INITDB_DATABASE=docker-compose
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=secure
    volumes:
      - ./data/db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
        - 27017:27017
    #command: mongod --logpath=/dev/null # --quiet
    healthcheck:
      test: "echo 'db.runCommand(\"ping\").ok'"
      interval: 60s
      timeout: 5s

  app:
    container_name: my-app
    restart: always
    build: ./app
    working_dir: /app
    volumes:
      - ./app:/app
      - ~/.m2:/root/.m2
    expose:
      - "8080"
    command: mvn clean spring-boot:run
    depends_on:
      - mongodb

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    #links:
    #  - cadvisor:cadvisor
    #  - alertmanager:alertmanager
    #      - pushgateway:pushgateway
    #depends_on:
    #  - cadvisor
    #      - pushgateway
    #networks:
     # - back-tier
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  grafana:
    image: grafana/grafana
    container_name: monitoring_grafana
    #user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./data/grafana:/var/lib/grafana
     # - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always



volumes:
  prometheus_data:
  grafana_data: